{
    "openapi": "3.0.0",
    "info": {
        "title": "RENTX API Documentation",
        "description": " This is an API rent",
        "version": "1.0.0",
        "contact": {
            "name": "Antonio A Alves",
            "email": "antonioaugusto.alves1981@gmail.com"
        }
    },
    "paths": {
        "/categories": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Create Category",
                "description": " Create a new category",
                "security":[
                    {"bearerAuth":[]}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "example": {
                                    "name": "Category name example 01",
                                    "description": "Category description example 01"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully"
                    },
                    "500": {
                        "description": " Application error: Category already exists"
                    }
                }
            },
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "List all categories from database",
                "description": "List all categories from database",
                "responses": {
                    "200": {
                        "description": "Find all categories successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories/import": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Import categories",
                "description": "Import categories from a csv file",
                "requestBody": {
                    "content": {
                        "multipart/form-data":{
                            "schema":{
                                "type": "object",
                                "properties": {
                                    "file":{
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses":{
                    "201": {"description": "Upload complete"},
                    "500":{"description": "Upload error"}
                }
            }
        },
        "/specifications": {
            "post": {
                "tags": [
                    "Specifications"
                ],
                "summary": "Create new specification",
                "description": "Create a new specifiation about a car",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Specification"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Createad successfully"
                    },
                    "500": {
                        "description": "Specification already exists"
                    }
                }
            },
            "get": {
                "tags": [
                    "Specifications"
                ]
            }
        },
        "/sessions":{
            "post":{
                "tags":["Sessions"],
                "summary": "Authentication user",
                "description": "Authentication for API user. Some features must be accessed with login",
                "requestBody":{
                    "content":{
                        "application/json":{
                            "schema":{
                                "type":"object",
                                "properties":{
                                    "email":{
                                        "type":"string"
                                    },
                                   "password":{
                                    "type":"string"
                                   } 
                                }
                            }
                        }
                    }
                },
                "responses":{
                    "200":{
                        "description": "Success"
                    },
                    "400":{
                        "description": "Email or password incorrect"
                    }
                }
            }
        }
    },
    "definitions": {
        "Specification": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        }
    },

    "securitySchemes": {
        "bearerAuth":{
            "type": "http",
            "scheme": "bearer",
            "bearerFormat": "JWT"
        }
    }
}